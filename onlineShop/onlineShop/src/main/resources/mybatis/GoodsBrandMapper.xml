<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.onlineShop.dto.GoodsBrandMapper">
  <resultMap id="BaseResultMap" type="com.onlineShop.bean.GoodsBrand">
    <id column="brand_id" jdbcType="INTEGER" property="brandId" />
    <result column="brand_no" jdbcType="VARCHAR" property="brandNo" />
    <result column="brand_name" jdbcType="VARCHAR" property="brandName" />
    <result column="is_disabled" jdbcType="TINYINT" property="isDisabled" />
    <result column="modified" jdbcType="TIMESTAMP" property="modified" />
    <result column="created" jdbcType="TIMESTAMP" property="created" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    brand_id, brand_no, brand_name, is_disabled, modified, created
  </sql>
  <select id="selectByExample" parameterType="com.onlineShop.bean.GoodsBrandExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from goods_brand
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from goods_brand
    where brand_id = #{brandId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from goods_brand
    where brand_id = #{brandId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.onlineShop.bean.GoodsBrandExample">
    delete from goods_brand
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.onlineShop.bean.GoodsBrand">
    insert into goods_brand (brand_id, brand_no, brand_name, 
      is_disabled, modified, created
      )
    values (#{brandId,jdbcType=INTEGER}, #{brandNo,jdbcType=VARCHAR}, #{brandName,jdbcType=VARCHAR}, 
      #{isDisabled,jdbcType=TINYINT}, #{modified,jdbcType=TIMESTAMP}, #{created,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.onlineShop.bean.GoodsBrand">
    insert into goods_brand
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="brandId != null">
        brand_id,
      </if>
      <if test="brandNo != null">
        brand_no,
      </if>
      <if test="brandName != null">
        brand_name,
      </if>
      <if test="isDisabled != null">
        is_disabled,
      </if>
      <if test="modified != null">
        modified,
      </if>
      <if test="created != null">
        created,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="brandId != null">
        #{brandId,jdbcType=INTEGER},
      </if>
      <if test="brandNo != null">
        #{brandNo,jdbcType=VARCHAR},
      </if>
      <if test="brandName != null">
        #{brandName,jdbcType=VARCHAR},
      </if>
      <if test="isDisabled != null">
        #{isDisabled,jdbcType=TINYINT},
      </if>
      <if test="modified != null">
        #{modified,jdbcType=TIMESTAMP},
      </if>
      <if test="created != null">
        #{created,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.onlineShop.bean.GoodsBrandExample" resultType="java.lang.Long">
    select count(*) from goods_brand
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update goods_brand
    <set>
      <if test="record.brandId != null">
        brand_id = #{record.brandId,jdbcType=INTEGER},
      </if>
      <if test="record.brandNo != null">
        brand_no = #{record.brandNo,jdbcType=VARCHAR},
      </if>
      <if test="record.brandName != null">
        brand_name = #{record.brandName,jdbcType=VARCHAR},
      </if>
      <if test="record.isDisabled != null">
        is_disabled = #{record.isDisabled,jdbcType=TINYINT},
      </if>
      <if test="record.modified != null">
        modified = #{record.modified,jdbcType=TIMESTAMP},
      </if>
      <if test="record.created != null">
        created = #{record.created,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update goods_brand
    set brand_id = #{record.brandId,jdbcType=INTEGER},
      brand_no = #{record.brandNo,jdbcType=VARCHAR},
      brand_name = #{record.brandName,jdbcType=VARCHAR},
      is_disabled = #{record.isDisabled,jdbcType=TINYINT},
      modified = #{record.modified,jdbcType=TIMESTAMP},
      created = #{record.created,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.onlineShop.bean.GoodsBrand">
    update goods_brand
    <set>
      <if test="brandNo != null">
        brand_no = #{brandNo,jdbcType=VARCHAR},
      </if>
      <if test="brandName != null">
        brand_name = #{brandName,jdbcType=VARCHAR},
      </if>
      <if test="isDisabled != null">
        is_disabled = #{isDisabled,jdbcType=TINYINT},
      </if>
      <if test="modified != null">
        modified = #{modified,jdbcType=TIMESTAMP},
      </if>
      <if test="created != null">
        created = #{created,jdbcType=TIMESTAMP},
      </if>
    </set>
    where brand_id = #{brandId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.onlineShop.bean.GoodsBrand">
    update goods_brand
    set brand_no = #{brandNo,jdbcType=VARCHAR},
      brand_name = #{brandName,jdbcType=VARCHAR},
      is_disabled = #{isDisabled,jdbcType=TINYINT},
      modified = #{modified,jdbcType=TIMESTAMP},
      created = #{created,jdbcType=TIMESTAMP}
    where brand_id = #{brandId,jdbcType=INTEGER}
  </update>
</mapper>